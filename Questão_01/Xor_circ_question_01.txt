
LIBRARY IEEE;
USE ieee.std_logic_1164.all;
LIBRARY adk;
USE adk.all;

-- ENTIDADE
ENTITY Xor_circ IS
	PORT(
		A_input: IN std_logic; -- entrada A
		B_input: IN std_logic; -- entrada B
		Sa_output: OUT std_logic -- saÃ­da Sa = (!A . B) + (A . !B) -> exclusive or
	);
END ENTITY Xor_circ;

-- ARQUITETURA
ARCHITECTURE logic OF Xor_circ IS
	SIGNAL temp0, temp1, temp2, temp3: std_logic; -- para guardar sinais obtidos

	COMPONENT MyAND PORT (a0_input, a1_input: IN std_logic;
										     a_output: OUT std_logic); END COMPONENT;
	COMPONENT MyNOT PORT (n0_input: IN std_logic;
								 n_output: OUT std_logic); END COMPONENT;
	COMPONENT MyOR PORT (r0_input, r1_input: IN std_logic;
										    r_output: OUT std_logic); END COMPONENT;
	BEGIN
	Not1: MyNOT PORT MAP (n0_input => A_input,
							    n_output => temp0);
	Not2: MyNOT PORT MAP (n0_input => B_input,
							    n_output => temp1);
	And1: MyAND PORT MAP (a0_input => temp0,
							    a1_input => B_input,
							    a_output => temp2);
	And2: MyAND PORT MAP (a0_input => A_input,
							    a1_input => temp1,
							    a_output => temp3);
	Or1: MyOR PORT MAP (r0_input => temp2,
							  r1_input => temp3,
							  r_output => Sa_output);
							  
END logic;
